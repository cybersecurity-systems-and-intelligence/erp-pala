[{"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\index.js":"1","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\App.js":"2","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\reportWebVitals.js":"3","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\context\\ComponenteContext.js":"4","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\Dashboard.js":"5","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\Login.js":"6","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\registro\\Checkout.js":"7","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\Obras.js":"8","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\Error.js":"9","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\registro\\DatosBancarios.js":"10","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\registro\\DatosFiscales.js":"11","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\Copyright.js":"12","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\registro\\Resumen.js":"13","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\registro\\DatosPersonales.js":"14","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\registro\\Botones.js":"15","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\Modal.js":"16","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\libs\\guardarLS.js":"17","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\admin\\ListItemsAdmin.js":"18","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\libs\\validarDatos.js":"19","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\admin\\DetalleObraAdmin.js":"20","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\admin\\CrearObraAdmin.js":"21","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\admin\\PerfilAdmin.js":"22","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\prov\\ListItemsProv.js":"23","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\admin\\ObrasCotizadasAdmin.js":"24","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\prov\\PerfilProv.js":"25","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\prov\\DetalleObraCotizadaProv.js":"26","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\prov\\CotizarObraProv.js":"27","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\asets\\img\\imagenes.js":"28","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\BuscadorObra.js":"29","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\CardObra.js":"30","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\admin\\FormularioRegistroObrasAdmin.js":"31","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\admin\\TablaObrasAdmin.js":"32","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\admin\\DatosPrincipalesObrasAdmin.js":"33","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\prov\\DatosPersonales.js":"34","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\prov\\TablaObraProv.js":"35","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\prov\\FormularioCotizarObraProv.js":"36","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\libs\\createPdf.js":"37","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\libs\\docdefinition.js":"38","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\libs\\createTable.js":"39","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\images\\logo.js":"40"},{"size":611,"mtime":1611612770131,"results":"41","hashOfConfig":"42"},{"size":820,"mtime":1611684004986,"results":"43","hashOfConfig":"42"},{"size":375,"mtime":1611612770135,"results":"44","hashOfConfig":"42"},{"size":1137,"mtime":1611612770129,"results":"45","hashOfConfig":"42"},{"size":17153,"mtime":1611680032594,"results":"46","hashOfConfig":"42"},{"size":6596,"mtime":1611687771670,"results":"47","hashOfConfig":"42"},{"size":11138,"mtime":1611688777965,"results":"48","hashOfConfig":"42"},{"size":3517,"mtime":1611683692650,"results":"49","hashOfConfig":"42"},{"size":177,"mtime":1611687674393,"results":"50","hashOfConfig":"42"},{"size":2555,"mtime":1611689875699,"results":"51","hashOfConfig":"42"},{"size":7794,"mtime":1611689772886,"results":"52","hashOfConfig":"42"},{"size":610,"mtime":1611612770061,"results":"53","hashOfConfig":"42"},{"size":4073,"mtime":1611689928109,"results":"54","hashOfConfig":"42"},{"size":4197,"mtime":1611689785425,"results":"55","hashOfConfig":"42"},{"size":1233,"mtime":1611688917020,"results":"56","hashOfConfig":"42"},{"size":989,"mtime":1611612770099,"results":"57","hashOfConfig":"42"},{"size":321,"mtime":1611612770134,"results":"58","hashOfConfig":"42"},{"size":3151,"mtime":1611614258615,"results":"59","hashOfConfig":"42"},{"size":4205,"mtime":1611612770135,"results":"60","hashOfConfig":"42"},{"size":8961,"mtime":1611619486338,"results":"61","hashOfConfig":"42"},{"size":10264,"mtime":1611619563278,"results":"62","hashOfConfig":"42"},{"size":159,"mtime":1611612770105,"results":"63","hashOfConfig":"42"},{"size":2865,"mtime":1611614202091,"results":"64","hashOfConfig":"42"},{"size":2224,"mtime":1611612770104,"results":"65","hashOfConfig":"42"},{"size":244,"mtime":1611612770123,"results":"66","hashOfConfig":"42"},{"size":411,"mtime":1611612770120,"results":"67","hashOfConfig":"42"},{"size":10016,"mtime":1611687195041,"results":"68","hashOfConfig":"42"},{"size":138,"mtime":1611612770059,"results":"69","hashOfConfig":"42"},{"size":4733,"mtime":1611613860249,"results":"70","hashOfConfig":"42"},{"size":5874,"mtime":1611683165434,"results":"71","hashOfConfig":"42"},{"size":7562,"mtime":1611612770103,"results":"72","hashOfConfig":"42"},{"size":4355,"mtime":1611612770106,"results":"73","hashOfConfig":"42"},{"size":2890,"mtime":1611612770101,"results":"74","hashOfConfig":"42"},{"size":2851,"mtime":1611619488561,"results":"75","hashOfConfig":"42"},{"size":4203,"mtime":1611683112679,"results":"76","hashOfConfig":"42"},{"size":9357,"mtime":1611687370908,"results":"77","hashOfConfig":"42"},{"size":1309,"mtime":1611681819190,"results":"78","hashOfConfig":"42"},{"size":3364,"mtime":1611682523616,"results":"79","hashOfConfig":"42"},{"size":561,"mtime":1611612770133,"results":"80","hashOfConfig":"42"},{"size":8321,"mtime":1611612770130,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1uqwymd",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\index.js",[],["171","172"],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\App.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\reportWebVitals.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\context\\ComponenteContext.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\Dashboard.js",["173","174","175","176","177","178","179"],"import { useState, useContext, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport jwt_decode from 'jwt-decode'\r\nimport axios from 'axios'\r\nimport { guardarLS } from '../libs/guardarLS'\r\nimport { makeStyles, Avatar, CssBaseline, Drawer, AppBar, Toolbar, List } from '@material-ui/core';\r\nimport { Typography, Divider, IconButton, Badge } from '@material-ui/core/';\r\nimport { Menu, ChevronLeft, ExitToApp } from '@material-ui/icons';\r\nimport imagenes from '../asets/img/imagenes';\r\n\r\nimport ListItemsAdmin from './admin/ListItemsAdmin';\r\nimport PerfilAdmin from './admin/PerfilAdmin'\r\nimport CrearObraAdmin from './admin/CrearObraAdmin'\r\n//import ObrasCreadasAdmin from './admin/ObrasCreadasAdmin'\r\nimport ObrasCotizadasAdmin from './admin/ObrasCotizadasAdmin'\r\nimport DetalleObraAdmin from './admin/DetalleObraAdmin'\r\n\r\nimport ListItemsProv from './prov/ListItemsProv'\r\nimport PerfilProv from './prov/PerfilProv'\r\n// import ObrasDisponiblesProv from './prov/ObrasDisponiblesProv'\r\n// import ObrasCotizadasProv from './prov/ObrasCotizadasProv'\r\nimport CotizarObraProv from './prov/CotizarObraProv'\r\nimport DetalleObraCotizadaProv from './prov/DetalleObraCotizadaProv'\r\n\r\nimport Obras from './Obras'\r\n\r\nimport {ComponenteContext} from '../context/ComponenteContext'\r\n\r\n//import {correoJwt} from '../funciones/decodificarJwt'\r\n\r\nconst drawerWidth = 240\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    background: '#f1f8e9',\r\n    \r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n    background: '#fff',\r\n    color: '#373737'\r\n  },\r\n\r\n  hr:{\r\n    background: 'linear-gradient(#d4e157, #afb42b)',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    width: '50%',\r\n    borderColor:'#d4e157',\r\n    boxShadow:'2px 2px 5px #999',\r\n    height:'8px',\r\n    borderRadius: '5px',\r\n    marginTop:'1px'\r\n   },\r\n\r\n   toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '0 28px',\r\n    ...theme.mixins.toolbar,\r\n    \r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    background: '#cddc39',\r\n    color: 'black'\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n    \r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n    \r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    margin: 'auto 0'\r\n    \r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  \r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      //width: theme.spacing({drawerWidth}),\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  \r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 3,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  \r\n  const resultado = JSON.parse(localStorage.getItem('jwt'))\r\n  const decoded = jwt_decode(resultado)\r\n  \r\n\r\n  const classes = useStyles()\r\n\r\n  const { componentecontx, guardarComponenteContx } = useContext(ComponenteContext)\r\n\r\n  const { nivel_acceso, numero_componente } = componentecontx  \r\n\r\n  //const componente_ls = JSON.parse(localStorage.getItem('componente'))  \r\n  \r\n  // const [ componente, guardarComponente ] = useState({\r\n  //   nivel_acceso: componente_ls.nivel_acceso,\r\n  //   numero_componente: componente_ls.numero_componente\r\n  // })\r\n\r\n  // const { nivel_acceso, numero_componente } = componente\r\n\r\n  const [open, setOpen] = useState(true);\r\n  \r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  \r\n  const [ obrasdisponibles, guardarObrasDisponibles ] = useState([])\r\n  const [ obrascotizadas, guardarObrasCotizadas ] = useState([])\r\n  const [ obrastotales, guardarObrasTotales ] = useState([])\r\n  const [ rowsobrasdisponibles, guardarRowsObrasDisponibles ] = useState([])\r\n  const [ rowsobrascotizadas, guardarRowsObrasCotizadas ] = useState([])\r\n  const [ rowsobrastotales, guardarRowsObrasTotales ] = useState([])\r\n  const [ actualizarcards, guardarActualizarCards ] = useState(0)\r\n  const [ paginaactual, guardarPaginaActual ] = useState(0)\r\n  const [ page, setPage ] = useState(1);    \r\n  const [ cantidadcards, guardarCantidadCards ] = useState(12)\r\n  const [ paginafinal, guardarPaginaFinal ] = useState(cantidadcards)\r\n  const [ tipobusqueda, guardarTipoBusqueda ] = useState('Buscar por Folio Obra')\r\n  const [ perfil, guardarPerfil ] = useState({})\r\n  const [ errorconsulta, guardarErrorConsulta ] = useState(false)\r\n\r\n  useEffect(() => {\r\n    \r\n    const consultarAPI = async () => {\r\n      if( nivel_acceso === 0){        \r\n        const respObrasTotales = await axios.get('https://apicotizacion.herokuapp.com/api/obras')\r\n        const obrasTotales = respObrasTotales.data.Obras.map(obra => (\r\n          {\r\n            folioObra: obra.folio_obra,\r\n            nombreObra: obra.nombre_obra                    \r\n          }\r\n        ))\r\n        guardarObrasTotales(respObrasTotales.data.Obras)\r\n        guardarRowsObrasTotales(obrasTotales)\r\n      }else if (nivel_acceso === 1){\r\n        const respObrasDisp = await axios.get('https://apicotizacion.herokuapp.com/api/obras/vigentes')\r\n        const respObrasCoti = await axios.get(`https://apicotizacion.herokuapp.com/api/cotizaciones/cotizadas/${decoded.correo}`)\r\n        const respPerfil = await axios.get(`https://apicotizacion.herokuapp.com/api/proveedores/datos_personales/${decoded.correo}`)\r\n        const obrasDisp = respObrasDisp.data.Obras.map(obra => (\r\n          {\r\n            folioObra: obra.folio_obra,\r\n            nombreObra: obra.nombre_obra                    \r\n          }\r\n        ))\r\n        const obrasCoti = respObrasCoti.data.Obras.map(obra => (\r\n          {\r\n            folioObra: obra.folio_obra,\r\n            folioCotizacion: obra.folio_cotizacion,\r\n            nombreObra: obra.nombre_obra,                   \r\n          }\r\n        ))\r\n        guardarObrasDisponibles(respObrasDisp.data.Obras)\r\n        guardarObrasCotizadas(respObrasCoti.data.Obras)\r\n        guardarRowsObrasDisponibles(obrasDisp)\r\n        guardarRowsObrasCotizadas(obrasCoti)\r\n        guardarPerfil(respPerfil.data.datos_personales)\r\n      }\r\n    }\r\n    consultarAPI()\r\n    //eslint-disable-next-line\r\n  }, [actualizarcards])\r\n  //const [ numerocomponentedashboardadmin, guardarNumeroComponenteDashboardAdmin ] = useState(0)\r\n  //const [ numerocomponentedashboardprov, guardarNumeroComponenteDashboardProv ] = useState(0)  \r\n  const [ obra, guardarObra ] = useState({})\r\n\r\n  const paginaAdmin = () => {\r\n    if (nivel_acceso === 0 && numero_componente === 0){\r\n      return <CrearObraAdmin\r\n        //guardarComponente={guardarComponente}\r\n        //componente={componente}\r\n        guardarActualizarCards={guardarActualizarCards}\r\n      />\r\n    }else if (nivel_acceso === 0 && numero_componente === 1){\r\n      return <PerfilAdmin\r\n        correo={decoded.correo}\r\n      />\r\n    }else if (nivel_acceso === 0 && numero_componente === 2){\r\n      return <Obras        \r\n        titulo={<h5>OBRAS CREADAS<hr className={classes.hr}/></h5>}\r\n        siguientecomponente={3}\r\n        guardarObra={guardarObra}\r\n        rows={rowsobrastotales}  \r\n        guardarRows={guardarRowsObrasTotales}      \r\n        obrastotal={obrastotales}     \r\n        totalpaginas={Math.ceil(rowsobrastotales.length/cantidadcards)} \r\n        paginaactual={paginaactual}  \r\n        guardarPaginaActual={guardarPaginaActual}\r\n        paginafinal={paginafinal}\r\n        guardarPaginaFinal={guardarPaginaFinal}\r\n        page={page}\r\n        setPage={setPage}\r\n        cantidadcards={cantidadcards}\r\n        bandObrasCotizadas={false}\r\n        tipobusqueda={tipobusqueda}\r\n        guardarTipoBusqueda={guardarTipoBusqueda}\r\n        seleccionpor={'obra'}\r\n        errorconsulta={errorconsulta}\r\n        guardarErrorConsulta={guardarErrorConsulta}\r\n      />\r\n    }else if (nivel_acceso === 0 && numero_componente === 3){\r\n      return <ObrasCotizadasAdmin\r\n        obra={obra}\r\n        guardarObra={guardarObra}\r\n        rowsobrascotizadas={rowsobrascotizadas}      \r\n        guardarRowsObrasCotizadas={guardarRowsObrasCotizadas}        \r\n        obrascotizadas={obrascotizadas}\r\n        guardarObrasCotizadas={guardarObrasCotizadas}        \r\n        paginaactual={paginaactual}  \r\n        guardarPaginaActual={guardarPaginaActual}\r\n        paginafinal={paginafinal}\r\n        guardarPaginaFinal={guardarPaginaFinal}\r\n        page={page}\r\n        setPage={setPage}\r\n        cantidadcards={cantidadcards}\r\n        bandObrasCotizadas={true}\r\n        tipobusqueda={tipobusqueda}\r\n        guardarTipoBusqueda={guardarTipoBusqueda}\r\n        errorconsulta={errorconsulta}\r\n        guardarErrorConsulta={guardarErrorConsulta}\r\n      />\r\n    }else if (nivel_acceso === 0 && numero_componente === 4){\r\n      return <DetalleObraAdmin\r\n        obra={obra}\r\n      />\r\n      //return `La Obra es: ${obra.folio_obra} \\nLa cotizacion es: ${obra.folio_cotizacion}`\r\n    }else{\r\n      return 'error 400'\r\n    }\r\n    /*\r\n    switch (numerocomponentedashboardadmin){\r\n      case 0:\r\n        return <CrearObraAdmin\r\n          guardarNumeroComponenteDashboardAdmin={guardarNumeroComponenteDashboardAdmin}\r\n        />\r\n      case 1:\r\n        return <PerfilAdmin/>\r\n      case 2:\r\n        return <ObrasCreadasAdmin/>\r\n      default:\r\n        return 'error 400'\r\n    }\r\n    */\r\n  }\r\n\r\n  const paginaUsuario = () => {\r\n    if(nivel_acceso === 1 && numero_componente === 0){\r\n      return <Obras\r\n        // guardarComponente={guardarComponente}\r\n        // componente={componente}\r\n        titulo={<h5>OBRAS DISPONIBLES<hr className={classes.hr}/></h5>}\r\n        siguientecomponente={3}\r\n        guardarObra={guardarObra}\r\n        rows={rowsobrasdisponibles}  \r\n        guardarRows={guardarRowsObrasDisponibles}            \r\n        obrastotal={obrasdisponibles}\r\n        totalpaginas={Math.ceil(rowsobrasdisponibles.length/cantidadcards)}   \r\n        paginaactual={paginaactual}  \r\n        guardarPaginaActual={guardarPaginaActual}\r\n        paginafinal={paginafinal}\r\n        guardarPaginaFinal={guardarPaginaFinal}\r\n        page={page}\r\n        setPage={setPage}\r\n        cantidadcards={cantidadcards}\r\n        bandObrasCotizadas={false}\r\n        tipobusqueda={tipobusqueda}\r\n        guardarTipoBusqueda={guardarTipoBusqueda}\r\n        seleccionpor={'obra'}\r\n        errorconsulta={errorconsulta}\r\n        guardarErrorConsulta={guardarErrorConsulta}\r\n      />\r\n    }else if(nivel_acceso === 1 && numero_componente === 1){\r\n      return <PerfilProv\r\n        perfil={perfil}\r\n      />\r\n    }else if(nivel_acceso === 1 && numero_componente === 2){\r\n      //return <ObrasCotizadasProv/>      \r\n      return <Obras\r\n        // guardarComponente={guardarComponente}\r\n        // componente={componente}\r\n        titulo={<h5>OBRAS COTIZADAS<hr className={classes.hr}/></h5>}\r\n        siguientecomponente={4}\r\n        guardarObra={guardarObra}\r\n        rows={rowsobrascotizadas}      \r\n        guardarRows={guardarRowsObrasCotizadas}        \r\n        obrastotal={obrascotizadas}\r\n        totalpaginas={Math.ceil(rowsobrascotizadas.length/cantidadcards)} \r\n        paginaactual={paginaactual}  \r\n        guardarPaginaActual={guardarPaginaActual}\r\n        paginafinal={paginafinal}\r\n        guardarPaginaFinal={guardarPaginaFinal}\r\n        page={page}\r\n        setPage={setPage}\r\n        cantidadcards={cantidadcards}\r\n        bandObrasCotizadas={true}\r\n        tipobusqueda={tipobusqueda}\r\n        guardarTipoBusqueda={guardarTipoBusqueda}\r\n        seleccionpor={'obra'}\r\n        errorconsulta={errorconsulta}\r\n        guardarErrorConsulta={guardarErrorConsulta}\r\n      />\r\n    }else if(nivel_acceso === 1 && numero_componente === 3){\r\n      return <CotizarObraProv\r\n        // guardarComponente={guardarComponente}\r\n        // componente={componente}\r\n        obra={obra}\r\n        guardarActualizarCards={guardarActualizarCards}\r\n      />\r\n    }else if(nivel_acceso === 1 && numero_componente === 4){\r\n      return <DetalleObraCotizadaProv\r\n        obra={obra}\r\n      />\r\n    }\r\n    else{\r\n      return 'error 400'\r\n    }\r\n    /*\r\n    switch (numerocomponentedashboardprov) {\r\n      case 0:\r\n        return <ObrasDisponiblesProv\r\n          guardarNumeroComponenteDashboardProv={guardarNumeroComponenteDashboardProv}         \r\n          guardarObra={guardarObra}\r\n        />\r\n      case 1:\r\n        return <PerfilProv/>\r\n      case 2:\r\n        return <ObrasCotizadasProv/>\r\n      case 3:\r\n        return <CotizarObraProv\r\n          guardarNumeroComponenteDashboardProv={guardarNumeroComponenteDashboardProv}          \r\n          obra={obra}\r\n        />\r\n      default:\r\n        return 'error 400'\r\n    }\r\n    */\r\n  }\r\n\r\n  const salirlogin = () => {\r\n    //guardarLS(\"\", \"\", \"\")\r\n    localStorage.removeItem('jwt')\r\n    localStorage.removeItem('componente')\r\n    guardarComponenteContx({\r\n      nivel_acceso: null,\r\n      numero_ventana: 0,\r\n      numero_componente: null\r\n    })\r\n    /*const objeto = {\r\n      nivel_acceso: 0,\r\n      numero_componente: 0,\r\n      numero_ventana: 0\r\n    }\r\n    localStorage.setItem('componente', JSON.stringify(objeto))\r\n\r\n    guardarComponenteContx({\r\n      nivel_acceso: 0,\r\n      numero_ventana: 0,\r\n      numero_componente: 0\r\n    })\r\n    */\r\n\r\n    //guardarNumeroComponente(0)    \r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}  align=\"center\">\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <Menu />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" align=\"center\" noWrap className={classes.title}>\r\n            {         \r\n              nivel_acceso === 0 ? 'ADMINISTRACIÓN' : 'PROVEEDOR'\r\n            }\r\n            \r\n          </Typography>          \r\n          <IconButton color=\"inherit\">\r\n            <Badge olor=\"secondary\">\r\n              <ExitToApp onClick={salirlogin} />\r\n            </Badge>\r\n          </IconButton>\r\n         \r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n       <div className={classes.toolbarIcon}>\r\n          <div>\r\n            <img style={{width: 160, right:'30%', marginRight:'5px'}} src={imagenes.imgjpg} />\r\n          </div>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeft />\r\n          </IconButton>\r\n        </div>\r\n        {\r\n          nivel_acceso === 0\r\n          ?\r\n          <ListItemsAdmin\r\n            guardarPaginaActual={guardarPaginaActual}\r\n            setPage={setPage}\r\n            guardarRowsObrasTotales={guardarRowsObrasTotales}\r\n            guardarRowsObrasCotizadas={guardarRowsObrasCotizadas}     \r\n            obrastotales={obrastotales}            \r\n            guardarTipoBusqueda={guardarTipoBusqueda}            \r\n            guardarErrorConsulta={guardarErrorConsulta}\r\n          />\r\n          :\r\n          <ListItemsProv\r\n            guardarPaginaActual={guardarPaginaActual}\r\n            setPage={setPage}\r\n            obrasdisponibles={obrasdisponibles}\r\n            guardarRowsObrasDisponibles={guardarRowsObrasDisponibles}                  \r\n            obrascotizadas={obrascotizadas}\r\n            guardarRowsObrasCotizadas={guardarRowsObrasCotizadas}            \r\n            guardarTipoBusqueda={guardarTipoBusqueda}\r\n            guardarErrorConsulta={guardarErrorConsulta}\r\n          />\r\n        }\r\n      </Drawer>\r\n      \r\n      <main className={classes.content}>\r\n        \r\n        <div className={classes.appBarSpacer} />   \r\n        \r\n      <img style={{width: 170, marginTop:\"20px\"}} src={imagenes.imgjpg} />\r\n         \r\n            {\r\n              nivel_acceso === 0 ? paginaAdmin() : paginaUsuario()\r\n            }\r\n      </main>\r\n    </div>\r\n  );\r\n}","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\Login.js",["180"],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\registro\\Checkout.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\Obras.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\Error.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\registro\\DatosBancarios.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\registro\\DatosFiscales.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\Copyright.js",["181"],"import { Link, Typography } from '@material-ui/core';\r\nimport imagenes from '../asets/img/imagenes';\r\n\r\nconst Copyright = () => {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            <div>\r\n            <img style={{width: 60}} src={imagenes.imgjpg} />\r\n          </div>\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"http://www.localhost:3000/\">\r\n                Pavimentos Laguna SA de CV\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    )\r\n}\r\n\r\nexport default Copyright;","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\registro\\Resumen.js",["182","183"],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\registro\\DatosPersonales.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\registro\\Botones.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\Modal.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\libs\\guardarLS.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\admin\\ListItemsAdmin.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\libs\\validarDatos.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\admin\\DetalleObraAdmin.js",["184","185","186"],"import { useState, Fragment, useEffect } from 'react';\r\nimport { makeStyles, Grid, Button, CssBaseline, Typography, Checkbox, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from '@material-ui/core/';\r\nimport Copyright from '../Copyright'\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n      secondary: {\r\n        main: '#b3d233',\r\n      },\r\n    },\r\n  });\r\n\r\nconst useStyles = makeStyles((theme) => ({ \r\n    layout: {\r\n        width: 'auto',\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        },\r\n        paper: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(3),\r\n        padding: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            padding: theme.spacing(3),\r\n        },\r\n        },\r\n        btnregistrar: {\r\n            float: 'right',\r\n            background: 'linear-gradient(#d4e157, #b3d233)',\r\n            color:'#424242',\r\n    \r\n            '&:hover': {\r\n                color:'#fff',\r\n                fontWeight: '800',\r\n            }\r\n    \r\n    \r\n        },\r\n        rb1:{\r\n            alignItems: 'center',\r\n            textAlign: 'center'\r\n           },\r\n           hr:{\r\n            background: 'linear-gradient(#d4e157, #afb42b)',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            width: '50%',\r\n            borderColor:'#d4e157',\r\n            boxShadow:'2px 2px 5px #999',\r\n            height:'8px',\r\n            borderRadius: '5px',\r\n            marginTop:'1px',\r\n            alignItems: 'center',\r\n            textAlign: 'center'\r\n           }, \r\n    root: {\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        maxHeight: 440,\r\n    },\r\n    btn:{\r\n        background: 'linear-gradient(#ff616f, #ab000d)',\r\n        border: 3,\r\n        borderRadius: 6,\r\n        color: 'white',\r\n        height: 30,\r\n        width: '50%',\r\n        cursor: 'pointer',\r\n    \r\n        '&:hover': {\r\n          background: 'linear-gradient(#ab000d, #ff616f)',\r\n          color: 'white',\r\n          fontWeight: '700',\r\n          \r\n        },\r\n    },\r\n}));\r\n\r\nexport default function DetalleObraAdmin({ obra }) {\r\n\r\n  const columns = [\r\n    { id: 'folioItem', label: 'Folio Item', minWidth: 100 },\r\n    { id: 'categoria', label: 'Categoria', minWidth: 100 },\r\n    {\r\n      id: 'subcategoria',\r\n      label: 'Sub Categoria',\r\n      minWidth: 100,\r\n      align: 'right',\r\n      format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n      id: 'producto',\r\n      label: 'Producto',\r\n      minWidth: 170,\r\n      align: 'right',\r\n      format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n      id: 'unidad',\r\n      label: 'Unidad',\r\n      minWidth: 100,\r\n      align: 'right',\r\n      format: (value) => value.toFixed(2),\r\n    },\r\n    {\r\n      id: 'requeridos',\r\n      label: 'Requeridos',\r\n      minWidth: 170,\r\n      align: 'right',\r\n      format: (value) => value.toFixed(2),\r\n    },\r\n    {\r\n      id: 'anotaciones',\r\n      label: 'Anotaciones',\r\n      minWidth: 170,\r\n      align: 'right',\r\n      format: (value) => value.toFixed(2),\r\n    },\r\n    {\r\n      id: 'seleccionar',\r\n      label: 'seleccionar',\r\n      minWidth: 170,\r\n      align: 'right',\r\n      format: (value) => value.toFixed(2),\r\n    }\r\n  ]\r\n\r\n\r\n    const classes = useStyles()\r\n\r\n    const [ page, setPage ] = useState(0)\r\n    const [ rowsPerPage, setRowsPerPage ] = useState(10)\r\n    const [ rows, guardarRows ] = useState(obra.materiales_cotizacion)\r\n    const [ checks, guardarChecks ] = useState({})\r\n    const [ bandbotonregistrar, guardarBandBotonRegistrar ] = useState(true)\r\n \r\n    useEffect(() => {\r\n        const objeto = {}\r\n        obra.materiales_cotizacion.map(e => (objeto[e.folioItem] = false))\r\n        guardarChecks(objeto)\r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n  \r\n    useEffect(() => {\r\n        let band = false\r\n        for (const property in checks) {\r\n            if(checks[property]){\r\n                band = true\r\n                break\r\n            }\r\n        }        \r\n        if(band === true){\r\n            guardarBandBotonRegistrar(false)\r\n        }else{\r\n            guardarBandBotonRegistrar(true)\r\n        }\r\n\r\n    }, [checks])\r\n\r\n    const registrar = () => {\r\n        \r\n    }\r\n  \r\n\r\n    const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n    };\r\n\r\n  const seleccionarFolio = e => {\r\n    //const dato_eliminado = rows.filter(row => row.folioItem !== e.target.id)\r\n    //guardarRows([...dato_eliminado])    \r\n    guardarChecks({\r\n        ...checks,\r\n        [e.target.id]: e.target.checked\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n         <ThemeProvider theme={theme}>\r\n        <CssBaseline />      \r\n        <main className={classes.layout}>\r\n            <Paper className={classes.paper}>\r\n\r\n            <Typography align=\"center\">\r\n                    <h3 className={classes.rb1} >REQUISICIÓN DE OBRAS<hr className={classes.hr}/></h3> \r\n                    </Typography>\r\n                <br/>\r\n                <Paper className={classes.root}>\r\n                    <TableContainer  className={classes.container}>\r\n                        <Table stickyHeader aria-label=\"sticky table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    {columns.map((column) => (\r\n                                    <TableCell\r\n                                        key={column.id}\r\n                                        align={column.align}\r\n                                        style={{ minWidth: column.minWidth }}\r\n                                    >\r\n                                        {column.label}\r\n                                    </TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody >\r\n                                {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                                    return (\r\n                                    <TableRow  hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                        {columns.map((column) => {\r\n                                        const value = row[column.id]\r\n                                        return (\r\n                                            <TableCell key={column.id} align={column.align}>\r\n                                            {\r\n                                                column.id === 'seleccionar'\r\n                                            ?\r\n                                            <Checkbox\r\n                                                checked={checks[row.folioItem]}\r\n                                                id={row.folioItem}\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\"\r\n                                                onClick={seleccionarFolio}\r\n                                            /> : value }\r\n                                            </TableCell>\r\n                                        );\r\n                                        })}\r\n                                    </TableRow>\r\n                                    );\r\n                                })}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    />\r\n                </Paper>\r\n                <br/>\r\n                <Grid container justify=\"flex-end\" spacing={3}>\r\n                    <Grid item xs={3}>\r\n                        <Button \r\n                            className={classes.btnregistrar}\r\n                            disabled={bandbotonregistrar}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={registrar}\r\n                            dir=\"rtl\"\r\n                        >Registrar</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n            <Copyright />\r\n        </main>\r\n        </ThemeProvider>\r\n    </Fragment>\r\n    \r\n  );\r\n}\r\n\r\n\r\n/*\r\n\r\n\r\n*/","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\admin\\CrearObraAdmin.js",["187","188","189"],"import { Fragment, useState, useEffect, useContext } from 'react';\r\nimport { makeStyles, CssBaseline, Paper, Button, Typography, Grid } from '@material-ui/core';\r\nimport Axios from 'axios'\r\nimport Copyright from '../Copyright'\r\nimport TablaObrasAdmin from './TablaObrasAdmin'\r\nimport Error from '../Error'\r\nimport Modal from '../Modal'\r\nimport FormularioRegistroObrasAdmin from './FormularioRegistroObrasAdmin'\r\nimport DatosPrincipalesObrasAdmin from './DatosPrincipalesObrasAdmin'\r\nimport {ComponenteContext} from '../../context/ComponenteContext'\r\n\r\nconst useStyles = makeStyles((theme) => ({   \r\n    layout: {\r\n      width: 'auto',\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    paper: {\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(3),\r\n      padding: theme.spacing(2),\r\n      [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n        marginTop: theme.spacing(6),\r\n        marginBottom: theme.spacing(6),\r\n        padding: theme.spacing(3),\r\n      },\r\n    },\r\n    btnregistrar: {\r\n        float: 'right',\r\n        background: 'linear-gradient(#d4e157, #afb42b)',\r\n        color:'#fff',\r\n\r\n        '&:hover': {\r\n            background: 'linear-gradient(#afb42b, #d4e157)',\r\n            color: 'white',\r\n            fontWeight: '700',\r\n        }\r\n\r\n    },\r\n\r\n    rb1:{\r\n        alignItems: 'center',\r\n        textAlign: 'center'\r\n       },\r\n       hr:{\r\n        background: 'linear-gradient(#d4e157, #afb42b)',\r\n        alignItems: 'center',\r\n        textAlign: 'center',\r\n        width: '50%',\r\n        borderColor:'#d4e157',\r\n        boxShadow:'2px 2px 5px #999',\r\n        height:'8px',\r\n        borderRadius: '5px',\r\n        marginTop:'1px',\r\n        alignItems: 'center',\r\n        textAlign: 'center'\r\n       },\r\n}));\r\n\r\n\r\nconst CrearObraAdmin = ( { guardarActualizarCards } ) => {\r\n    const classes = useStyles();\r\n\r\n    const { componentecontx, guardarComponenteContx } = useContext(ComponenteContext)\r\n\r\n    // Creacion de states\r\n    const [ error, guardarError ] = useState({\r\n        bandError: false,\r\n        mensajeError: ''\r\n    })\r\n    const [ items, guardarItems ] = useState([])\r\n    const [ categorias, guardarCategorias] = useState([])\r\n    const [ subcategorias, guardarSubCategorias ] = useState([])\r\n    const [ productos, guardarProductos ] = useState([])\r\n    const [ datos, guardarDatos ] = useState({        \r\n        folioItem: '',\r\n        categoria: '',\r\n        subcategoria: '',\r\n        producto: '',\r\n        unidad: '',\r\n        requeridos: 0,\r\n        anotaciones: '',\r\n        eliminar: ''\r\n    })\r\n    const [ rows, guardarRows ] = useState([])\r\n    const [ banddatosapi, guardarBandDatosApi ] = useState(false)\r\n    const [openmodal, setOpenModal] = useState(false)\r\n    const [ bandbotonregistrar, guardarBandBotonRegistrar ] = useState(true)\r\n    const [ datosprincipalesobra, guardarDatosPrincipalesObra ] = useState({\r\n        nombreObra: '',\r\n        direccionObra: '',\r\n        dependenciaObra: ''\r\n    })\r\n    const [ erroresdatos, guardarErroresDatos ] = useState({\r\n        errorNombreObra: false,\r\n        errorDireccionObra: false,\r\n        errorDependenciaObra: false\r\n    })\r\n    \r\n    // Destructuring de los state\r\n    const { categoria, subcategoria, producto } = datos\r\n    const { bandError, mensajeError } = error\r\n    const { nombreObra, direccionObra, dependenciaObra } = datosprincipalesobra\r\n    \r\n\r\n    useEffect(() => {        \r\n        const consultarAPI = async () => {\r\n            const resultado = await Axios('https://apicotizacion.herokuapp.com/api/items')\r\n            const res = [...new Set(resultado.data.items.map(e => (e.categoria)))]\r\n            guardarItems(resultado.data.items)\r\n            guardarCategorias(res)\r\n        }\r\n        consultarAPI()\r\n        \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(rows.length === 0){\r\n            guardarBandBotonRegistrar(true)\r\n        }\r\n    }, [rows])\r\n\r\n    useEffect(() => {\r\n        const resultado = items.filter(e => e.categoria === categoria)\r\n        guardarSubCategorias([...new Set(resultado.map(e => (e.subcategoria)))]) \r\n        guardarDatos({\r\n            ...datos,\r\n            folioItem: '',\r\n            subcategoria: '',\r\n            producto: '',\r\n            unidad: ''\r\n        })       \r\n        //eslint-disable-next-line\r\n    }, [categoria])\r\n\r\n    useEffect(() => {\r\n        const resultado = items.filter(e => e.subcategoria === subcategoria)\r\n        guardarProductos([...new Set(resultado.map(e => (e.nombre)))]) \r\n        guardarDatos({\r\n            ...datos,\r\n            folioItem: '',\r\n            producto: '',\r\n            unidad: ''\r\n        })\r\n        //eslint-disable-next-line\r\n    }, [subcategoria])\r\n\r\n    useEffect(() => {\r\n        const resultado = items.filter(e => e.nombre === producto)\r\n               \r\n        resultado.map(e => (guardarDatos({\r\n               ...datos,\r\n               unidad: e.unidades,\r\n               folioItem: e.folio\r\n            })))\r\n        //eslint-disable-next-line\r\n    }, [producto])\r\n\r\n    useEffect(() => {\r\n        const consultarAPI = async () => {\r\n            try{\r\n                let materiales = rows\r\n                materiales.map(material => delete material.eliminar)                                \r\n                const objeto = {\r\n                    \"nombre_obra\": nombreObra,\r\n                    \"direccion_obra\": direccionObra,\r\n                    \"dependencia_obra\": dependenciaObra,\r\n                    \"creador_obra\": \"quien sabe\",\r\n                    \"materiales_obra\": materiales\r\n                }\r\n                let resultadoAPI = await Axios.post('https://apicotizacion.herokuapp.com/api/obras', {objeto})\r\n                //guardarNumeroComponenteDashboardAdmin(2)\r\n                guardarActualizarCards(Math.floor(Math.random() * 1000) + 1)\r\n                guardarComponenteContx({\r\n                    ...componentecontx,\r\n                    numero_componente: 2\r\n                })\r\n                // guardarComponente({\r\n                //     ...componente,\r\n                //     numero_componente: 2\r\n                // })\r\n                \r\n            }catch(err){\r\n                guardarBandDatosApi(false)\r\n                alert(\"La obra ya ha sido registrada\")\r\n            }\r\n        }\r\n        if(banddatosapi && rows.length > 0){\r\n            consultarAPI()\r\n        }\r\n        //eslint-disable-next-line\r\n    }, [banddatosapi])\r\n\r\n      \r\n    const registrar = () => {\r\n        if (nombreObra.trim() === ''){            \r\n            guardarErroresDatos({\r\n                ...erroresdatos,\r\n                errorNombreObra: true\r\n            })\r\n            return\r\n        }\r\n        \r\n        if (direccionObra.trim() === ''){\r\n            guardarErroresDatos({\r\n                ...erroresdatos,\r\n                errorNombreObra: false,\r\n                errorDireccionObra: true\r\n            })\r\n            return\r\n        }\r\n        if (dependenciaObra.trim() === '') {\r\n            guardarErroresDatos({\r\n                ...erroresdatos,\r\n                errorDireccionObra: false,\r\n                errorDependenciaObra: true\r\n            })\r\n            return\r\n        }\r\n        guardarErroresDatos({\r\n            ...erroresdatos,\r\n            errorNombreObra: false,\r\n            errorDireccionObra: false,\r\n            errorDependenciaObra: false\r\n        })\r\n        \r\n        setOpenModal(true)\r\n    }\r\n\r\n    return ( \r\n        <Fragment>\r\n            <CssBaseline />      \r\n            <main className={classes.layout}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography align=\"center\">\r\n                    <h3 className={classes.rb1} >REGISTRO DE OBRAS<hr className={classes.hr}/></h3> \r\n                    </Typography>\r\n                    <br/>\r\n                    <br/>\r\n                    { bandError ? <Error mensaje={mensajeError}/> : null }\r\n                    <br/>\r\n                    <DatosPrincipalesObrasAdmin\r\n                        datosprincipalesobra={datosprincipalesobra}\r\n                        guardarDatosPrincipalesObra={guardarDatosPrincipalesObra}\r\n                        erroresdatos={erroresdatos}\r\n                        guardarErroresDatos={guardarErroresDatos}\r\n                    />\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <FormularioRegistroObrasAdmin\r\n                        datos={datos}\r\n                        guardarDatos={guardarDatos}\r\n                        guardarError={guardarError}\r\n                        rows={rows}\r\n                        guardarRows={guardarRows}\r\n                        guardarBandBotonRegistrar={guardarBandBotonRegistrar}\r\n                        categorias={categorias}\r\n                        subcategorias={subcategorias}\r\n                        productos={productos}\r\n                        classes={classes}\r\n                    />\r\n                    <br/>\r\n                    <br/>\r\n                    <br/> \r\n                    <TablaObrasAdmin\r\n                        rows={rows}\r\n                        guardarRows={guardarRows}\r\n                        guardarBandBotonRegistrar={guardarBandBotonRegistrar}\r\n                    />\r\n                    <br/>\r\n                    <Grid container justify=\"flex-end\" spacing={3}>\r\n                        <Grid item xs={3}>\r\n                            <Button \r\n                                className={classes.btnregistrar}\r\n                                disabled={bandbotonregistrar}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={registrar}\r\n                                dir=\"rtl\"\r\n                            >Registrar</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Modal\r\n                        openmodal={openmodal}\r\n                        setOpenModal={setOpenModal}\r\n                        guardarBandDatosApi={guardarBandDatosApi}\r\n                    />\r\n                </Paper>\r\n                <Copyright />\r\n            </main>\r\n        </Fragment>\r\n     )\r\n}\r\n \r\nexport default CrearObraAdmin;","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\admin\\PerfilAdmin.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\prov\\ListItemsProv.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\admin\\ObrasCotizadasAdmin.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\prov\\PerfilProv.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\prov\\DetalleObraCotizadaProv.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\prov\\CotizarObraProv.js",["190","191","192"],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\asets\\img\\imagenes.js",["193"],"import LOGO from './LOGOPala.jpg'\r\nimport LOGO2 from './LOGOPala.png'\r\n\r\nexport default {\r\n\r\n    \"imgpng\": LOGO,\r\n    \"imgjpg\": LOGO2\r\n\r\n}","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\BuscadorObra.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\CardObra.js",["194","195"],"import { Fragment, useContext } from 'react';\r\nimport { Card, Container, CardActions, CardContent, Grid, Typography, makeStyles }  from '@material-ui/core/';\r\nimport {Pagination} from '@material-ui/lab/';\r\nimport {ComponenteContext} from '../context/ComponenteContext'\r\nimport {createPDF} from '../libs/createPdf'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    background:'#f5f5f5',\r\n    borderRadius: 10,\r\n  },\r\n\r\n  \r\n  card: {\r\n    \r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    background: '#fff',\r\n    margin: '0 12px auto',\r\n    boxShadow:'#f0f4c3 0px 0px 0px 1px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset;',\r\n    transition: 'transform .2s',\r\n\r\n    '&:hover': {\r\n      transition: theme.transitions.create('transform','background','transition', {\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      transition: 'transform .5s',\r\n      transform: 'scale(1.1)',\r\n      color: 'black'\r\n      \r\n   },\r\n\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n    \r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n\r\n  num:{\r\n    background:'#f0f4c3'\r\n  },\r\n\r\n  btn:{\r\n    background: 'linear-gradient(#cfcfcf, #fff)',\r\n    border: 0,\r\n    borderRadius: 6,\r\n    color: 'black',\r\n    height: 30,\r\n    width: '100%',\r\n    cursor: 'pointer',\r\n    fontWeight: 600,\r\n    boxShadow:'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset',\r\n\r\n\r\n    '&:hover': {\r\n      transition: theme.transitions.create('transition','background', {\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n        transition: 'all 0.1s ease',\r\n        background: 'linear-gradient(#d4e157,#B3D233)',\r\n        color:'black'\r\n     },\r\n  },\r\n}));\r\n\r\n\r\n\r\nconst CardObra = ({siguientecomponente, rows, cantidadcards, totalpaginas, paginaactual, paginafinal, guardarPaginaFinal, page, setPage, guardarPaginaActual, obrastotal, obrascotizadas, guardarObra, bandObrasCotizadas, seleccionpor }) => {\r\n\r\n\r\n    const classes = useStyles();\r\n        \r\n    \r\n    \r\n    const { componentecontx, guardarComponenteContx } = useContext(ComponenteContext)\r\n\r\n    const { nivel_acceso } = componentecontx\r\n\r\n    const handleChange = (event, value) => {\r\n      setPage(value);    \r\n      guardarPaginaActual((cantidadcards*value)-cantidadcards)   \r\n      guardarPaginaFinal(cantidadcards*value) \r\n    };\r\n\r\n    const seleccionarObra = e => { \r\n      let obraSeleccionada = []       \r\n      if(nivel_acceso === 1 && siguientecomponente === 4 ){\r\n        obraSeleccionada = obrastotal.filter(row => row.folio_obra === e.target.id)\r\n        console.log(obraSeleccionada)\r\n        createPDF(obraSeleccionada)\r\n      }else{                    \r\n        if (seleccionpor === \"obra\" ){\r\n          obraSeleccionada = obrastotal.filter(row => row.folio_obra === e.target.id)\r\n        }else{          \r\n          obraSeleccionada = obrastotal.filter(row => row.folio_cotizacion === e.target.id)\r\n        }\r\n        const obra = obraSeleccionada[0]        \r\n        \r\n        guardarObra(obra)\r\n        guardarComponenteContx({\r\n          ...componentecontx,\r\n          numero_componente: siguientecomponente\r\n        })\r\n      }\r\n        \r\n        /*\r\n\r\n\r\n\r\n        guardarComponente({\r\n          ...componente,\r\n          numero_componente: 3\r\n        })\r\n\r\n\r\n\r\n        */\r\n    }\r\n\r\n    return (\r\n        <Fragment>    \r\n        <main>        \r\n            <Container className={classes.cardGrid} maxWidth=\"md\">\r\n            {/* End hero unit */}\r\n            <Grid container spacing={2}>\r\n                {rows.slice(paginaactual, paginafinal).reverse().map((row) => (\r\n                <Grid item key={bandObrasCotizadas ? row.folioCotizacion:row.folioObra} xs={12} sm={6} md={4}>\r\n                    <Card className={classes.card}>                  \r\n                    <CardContent className={classes.cardContent}>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                          Folio Obra: {row.folioObra}\r\n                        </Typography>\r\n                        {\r\n                          bandObrasCotizadas\r\n                          ?\r\n                          <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                            Folio Cotizacion: {row.folioCotizacion}\r\n                          </Typography>\r\n                          :\r\n                          null\r\n                        }\r\n                        <Typography>\r\n                        {row.nombreObra}\r\n                        </Typography>\r\n\r\n                        </CardContent>\r\n                        <CardActions>\r\n                        <input\r\n                            type='button'\r\n                            id={ seleccionpor === \"obra\" ? row.folioObra : row.folioCotizacion}\r\n                            value=\"Seleccionar\"\r\n                            onClick={seleccionarObra}\r\n                            className={classes.btn}\r\n                        />\r\n                    </CardActions>\r\n                    </Card>\r\n                </Grid>\r\n                ))}\r\n            </Grid>\r\n            \r\n\r\n            </Container>\r\n            <Grid\r\n              \r\n               container\r\n               spacing={0}\r\n               direction=\"column\"\r\n               alignItems=\"center\"\r\n               justify=\"center\"\r\n            >\r\n              <div className={classes.root}>\r\n                <Pagination count={totalpaginas} page={page} onChange={handleChange} />\r\n              </div>\r\n            </Grid>\r\n        </main>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default CardObra","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\admin\\FormularioRegistroObrasAdmin.js",["196"],"import {Button, InputLabel, Select, MenuItem, Grid, TextField } from '@material-ui/core';\r\nimport { Add } from '@material-ui/icons/'\r\nimport { styled } from '@material-ui/core/styles';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n      secondary: {\r\n        main: '#b3d233',\r\n      },\r\n    },\r\n  });\r\n\r\n\r\n\r\nconst ButtonComponent = styled('button')({\r\n    height: '100%',\r\n    width: '100%',\r\n    background: 'linear-gradient(#d4e157, #b3d233)',\r\n    color:'#000',\r\n    fontWeight: '700',\r\n    borderColor:'#d4e157',\r\n    borderRadius: '5px',\r\n    cursor: 'pointer',\r\n    fontSize:'15px',\r\n\r\n    '&:hover': {\r\n        background: 'linear-gradient(#b3d233, #d4e157)',\r\n    }\r\n});\r\n\r\nconst FormularioRegistroObras = ({ datos, guardarDatos, guardarError, rows, guardarRows, guardarBandBotonRegistrar, categorias, subcategorias, productos, classes }) => {\r\n\r\n    const { folioItem, categoria, subcategoria, producto, unidad, requeridos, anotaciones } = datos\r\n\r\n    const submitTabla = e => {\r\n        e.preventDefault()\r\n        \r\n        if (folioItem.trim() === '' || unidad.trim() === '' || anotaciones.trim() === ''){\r\n            guardarError({ bandError: true, mensajeError: 'Todos los campos son obligadorios' })\r\n            return\r\n        }    \r\n        if (requeridos < 1){\r\n            guardarError({ bandError: true, mensajeError: 'EL número requeridos deben ser mayor a 1' })\r\n            return\r\n        }      \r\n\r\n        const result = rows.find(row => row.folioItem === folioItem)        \r\n\r\n        if (result){            \r\n            guardarError({ bandError: true, mensajeError: 'El folio ya ha sido ingresado' })\r\n            return\r\n        }\r\n        \r\n        guardarError({ bandError: false, mensajeError: '' })\r\n        guardarRows([...rows, datos])\r\n        guardarDatos({\r\n            folioItem: '',\r\n            categoria: '',\r\n            subcategoria: '',\r\n            producto: '',\r\n            unidad: '',\r\n            requeridos: 0,\r\n            anotaciones: '',\r\n            eliminar: ''\r\n        })\r\n        guardarBandBotonRegistrar(false)\r\n    }\r\n\r\n    const handleChange = e => {\r\n        if (e.target.name === 'requeridos'){\r\n            guardarDatos({\r\n                ...datos,\r\n                [e.target.name]: parseInt(e.target.value)\r\n            })       \r\n        }else{        \r\n            guardarDatos({\r\n                ...datos,\r\n                [e.target.name]: e.target.value\r\n            })       \r\n        }\r\n         \r\n    }  \r\n\r\n    return ( \r\n        <form\r\n            onSubmit={submitTabla}\r\n        >\r\n            <ThemeProvider theme={theme}>\r\n            <Grid container spacing={3}>                \r\n                <Grid item xs={12} md={3}>\r\n                    <TextField                                              \r\n                        disabled          \r\n                        id=\"folioItem\"\r\n                        name=\"folioItem\"\r\n                        label=\"Folio Item\"\r\n                        value={folioItem}\r\n                        onChange={handleChange}         \r\n                        fullWidth\r\n                        color=\"secondary\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={3}>                        \r\n                    <InputLabel id=\"categoria\">Categoría</InputLabel>\r\n                    <Select\r\n                        required\r\n                        id=\"categoria\"\r\n                        name='categoria'\r\n                        value={categoria}\r\n                        onChange={handleChange}\r\n                        fullWidth\r\n                        color=\"secondary\"\r\n                    >\r\n                        {\r\n                            categorias.map(item => <MenuItem value={item}>{item}</MenuItem>)\r\n                        }\r\n                    </Select>                       \r\n                </Grid>\r\n                <Grid item xs={12} md={3}>                        \r\n                    <InputLabel id=\"subcategoria\">Sub Categoría</InputLabel>\r\n                    <Select\r\n                        required\r\n                        id=\"subcategoria\"\r\n                        name='subcategoria'\r\n                        value={subcategoria}\r\n                        onChange={handleChange}\r\n                        fullWidth\r\n                        color=\"secondary\"                    >\r\n                        {\r\n                            subcategorias.map(item => <MenuItem value={item}>{item}</MenuItem>)\r\n                        }\r\n                    </Select>                       \r\n                </Grid>\r\n                <Grid item xs={12} md={3}>                        \r\n                    <InputLabel id=\"producto\">Producto</InputLabel>\r\n                    <Select\r\n                        required\r\n                        id=\"producto\"\r\n                        name='producto'\r\n                        value={producto}\r\n                        onChange={handleChange}\r\n                        fullWidth\r\n                        color=\"secondary\"\r\n                    >\r\n                        {\r\n                            productos.map(item => <MenuItem value={item}>{item}</MenuItem>)\r\n                        }                                    \r\n                    </Select>                       \r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing={3}>                        \r\n                <Grid item xs={12} md={3}>\r\n                    <TextField                                    \r\n                        id=\"unidad\"\r\n                        name=\"unidad\"\r\n                        label=\"Unidad\"\r\n                        disabled\r\n                        value={unidad}\r\n                        onChange={handleChange}\r\n                        fullWidth\r\n                        color=\"secondary\"                                    \r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={3}>\r\n                    <TextField\r\n                        required\r\n                        id=\"requeridos\"\r\n                        name=\"requeridos\"\r\n                        label=\"Requeridos\"\r\n                        value={requeridos}\r\n                        onChange={handleChange}\r\n                        type='number'\r\n                        fullWidth\r\n                        color=\"secondary\"                              \r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={3}>\r\n                    <TextField\r\n                        required\r\n                        id=\"anotaciones\"\r\n                        name=\"anotaciones\"\r\n                        label=\"Anotaciones\"\r\n                        value={anotaciones}\r\n                        onChange={handleChange}\r\n                        fullWidth\r\n                        color=\"secondary\"                                 \r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={3}>\r\n                <ButtonComponent\r\n                    className={classes.btn}\r\n                    type='submit'\r\n                    fullWidth\r\n                    startIcon={<Add />}\r\n                    >\r\n                        AÑADIR\r\n                    </ButtonComponent>\r\n                </Grid>\r\n            </Grid>\r\n            </ThemeProvider>\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default FormularioRegistroObras;","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\admin\\TablaObrasAdmin.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\admin\\DatosPrincipalesObrasAdmin.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\prov\\DatosPersonales.js",["197","198"],"import { Fragment } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {makeStyles,} from '@material-ui/core/'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 2,\r\n    overflow: '2',\r\n    \r\n  },\r\n  paper: {\r\n    marginTop: '50px',\r\n    maxWidth: 650,\r\n    margin: `${theme.spacing(1)}px auto`,\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(8),\r\n    paddingLeft: theme.spacing(8),\r\n    paddingRight: theme.spacing(8),\r\n    background: 'white',\r\n    borderRadius: '10px 10px 10px 10px',\r\n  },\r\n\r\n\r\n  rb1:{\r\n    alignItems: 'center',\r\n    textAlign: 'center'\r\n   },\r\n   hr:{\r\n    background: 'linear-gradient(#d4e157, #afb42b)',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    width: '50%',\r\n    borderColor:'#d4e157',\r\n    boxShadow:'2px 2px 5px #999',\r\n    height:'8px',\r\n    borderRadius: '5px',\r\n    marginTop:'1px',\r\n    alignItems: 'center',\r\n    textAlign: 'center'\r\n   },\r\n\r\n}));\r\n\r\nexport default function DatosPersonales({perfil}) {\r\n  const classes = useStyles();\r\n\r\n  const { correo_prov, nombre_contacto_prov, telefono_fijo_prov, telefono_movil_prov } = perfil  \r\n\r\n  \r\n\r\n  return (\r\n    <div className={classes.paper}>\r\n    <Fragment>\r\n    <Typography>\r\n      <h3 className={classes.rb1} >DATOS PERSONALES <hr className={classes.hr}/></h3> \r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            disabled = {true}\r\n            id=\"correo_prov\"\r\n            name=\"correo_prov\"\r\n            label=\"Correo\"\r\n            value={''+correo_prov}\r\n            fullWidth\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            disabled = {true}\r\n            id=\"nombre_contacto_prov\"\r\n            name=\"nombre_contacto_prov\"\r\n            label=\"Nombre contacto\"\r\n            value={''+nombre_contacto_prov}\r\n            fullWidth\r\n            \r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}  sm={6}>\r\n          <TextField\r\n            disabled = {true}\r\n            id=\"telefono_fijo_prov\"\r\n            name=\"telefono_fijo_prov\"\r\n            label=\"Telefono fijo\"\r\n            value={''+telefono_fijo_prov}\r\n            fullWidth\r\n           \r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            disabled = {true}\r\n            id=\"telefono_movil_prov\"\r\n            name=\"telefono_movil_prov\"\r\n            label=\"Telefono celular\"\r\n            value={''+telefono_movil_prov}\r\n            fullWidth           \r\n          />\r\n        </Grid>\r\n        \r\n      </Grid>\r\n      \r\n\r\n    </Fragment>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\prov\\TablaObraProv.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\components\\prov\\FormularioCotizarObraProv.js",["199","200"],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\libs\\createPdf.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\libs\\docdefinition.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\libs\\createTable.js",[],"C:\\Users\\doria\\WebstormProjects\\curso_react\\Perfil_Pala\\src\\images\\logo.js",[],{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":5,"column":10,"nodeType":"207","messageId":"208","endLine":5,"endColumn":19},{"ruleId":"205","severity":1,"message":"209","line":6,"column":22,"nodeType":"207","messageId":"208","endLine":6,"endColumn":28},{"ruleId":"205","severity":1,"message":"210","line":6,"column":68,"nodeType":"207","messageId":"208","endLine":6,"endColumn":72},{"ruleId":"205","severity":1,"message":"211","line":7,"column":22,"nodeType":"207","messageId":"208","endLine":7,"endColumn":29},{"ruleId":"205","severity":1,"message":"212","line":174,"column":26,"nodeType":"207","messageId":"208","endLine":174,"endColumn":46},{"ruleId":"213","severity":1,"message":"214","line":459,"column":13,"nodeType":"215","endLine":459,"endColumn":95},{"ruleId":"213","severity":1,"message":"214","line":495,"column":7,"nodeType":"215","endLine":495,"endColumn":75},{"ruleId":"213","severity":1,"message":"214","line":139,"column":21,"nodeType":"215","endLine":139,"endColumn":71},{"ruleId":"213","severity":1,"message":"214","line":8,"column":13,"nodeType":"215","endLine":8,"endColumn":62},{"ruleId":"216","severity":1,"message":"217","line":24,"column":5,"nodeType":"218","messageId":"219","endLine":24,"endColumn":15},{"ruleId":"216","severity":1,"message":"220","line":25,"column":5,"nodeType":"218","messageId":"219","endLine":25,"endColumn":14},{"ruleId":"216","severity":1,"message":"217","line":57,"column":13,"nodeType":"218","messageId":"219","endLine":57,"endColumn":23},{"ruleId":"216","severity":1,"message":"220","line":58,"column":13,"nodeType":"218","messageId":"219","endLine":58,"endColumn":22},{"ruleId":"205","severity":1,"message":"221","line":138,"column":19,"nodeType":"207","messageId":"208","endLine":138,"endColumn":30},{"ruleId":"216","severity":1,"message":"217","line":55,"column":9,"nodeType":"218","messageId":"219","endLine":55,"endColumn":19},{"ruleId":"216","severity":1,"message":"220","line":56,"column":9,"nodeType":"218","messageId":"219","endLine":56,"endColumn":18},{"ruleId":"205","severity":1,"message":"222","line":171,"column":21,"nodeType":"207","messageId":"208","endLine":171,"endColumn":33},{"ruleId":"216","severity":1,"message":"217","line":63,"column":9,"nodeType":"218","messageId":"219","endLine":63,"endColumn":19},{"ruleId":"216","severity":1,"message":"220","line":64,"column":9,"nodeType":"218","messageId":"219","endLine":64,"endColumn":18},{"ruleId":"205","severity":1,"message":"222","line":187,"column":21,"nodeType":"207","messageId":"208","endLine":187,"endColumn":33},{"ruleId":"223","severity":1,"message":"224","line":4,"column":1,"nodeType":"225","endLine":9,"endColumn":2},{"ruleId":"216","severity":1,"message":"226","line":32,"column":7,"nodeType":"218","messageId":"219","endLine":32,"endColumn":17},{"ruleId":"216","severity":1,"message":"226","line":67,"column":9,"nodeType":"218","messageId":"219","endLine":67,"endColumn":19},{"ruleId":"205","severity":1,"message":"227","line":1,"column":9,"nodeType":"207","messageId":"208","endLine":1,"endColumn":15},{"ruleId":"216","severity":1,"message":"217","line":40,"column":5,"nodeType":"218","messageId":"219","endLine":40,"endColumn":15},{"ruleId":"216","severity":1,"message":"220","line":41,"column":5,"nodeType":"218","messageId":"219","endLine":41,"endColumn":14},{"ruleId":"205","severity":1,"message":"227","line":2,"column":9,"nodeType":"207","messageId":"208","endLine":2,"endColumn":15},{"ruleId":"205","severity":1,"message":"228","line":3,"column":10,"nodeType":"207","messageId":"208","endLine":3,"endColumn":13},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],"no-unused-vars","'guardarLS' is defined but never used.","Identifier","unusedVar","'Avatar' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'guardarCantidadCards' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-dupe-keys","Duplicate key 'alignItems'.","ObjectExpression","unexpected","Duplicate key 'textAlign'.","'guardarRows' is assigned a value but never used.","'resultadoAPI' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Duplicate key 'transition'.","'Button' is defined but never used.","'Add' is defined but never used.","no-global-assign","no-unsafe-negation"]